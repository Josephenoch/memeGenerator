{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","src","alt","MemeGenerator","props","topInputRef","useRef","bottomInputRef","useState","topText","settopText","bottomText","setbottomText","randomImg","setrandomImg","altText","setaltText","allMemeImgs","setallMemeImgs","topChecked","settopChecked","bottomChecked","setbottomChecked","handleChange","e","target","name","checked","current","disabled","useEffect","fetch","then","res","json","data","memes","hasMemes","length","className","ref","type","placeholder","value","onChange","onClick","preventDefault","randNum","Math","floor","random","console","log","url","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAWeA,EATC,WACZ,OACI,mCACI,qBAAKC,IAAI,iEAAiEC,IAAI,cAC9E,mD,OC+EGC,EAnFQ,SAACC,GACpB,IAAMC,EAAcC,mBACdC,EAAiBD,mBACvB,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,iCAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,mBAAS,WAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAoCV,oBAAS,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAA0CZ,oBAAS,GAAnD,mBAAOa,EAAP,KAAsBC,EAAtB,KAUMC,EAAc,SAACC,GACE,eAAhBA,EAAEC,OAAOC,OACRN,EAAcI,EAAEC,OAAOE,SACvBtB,EAAYuB,QAAQC,UAAYxB,EAAYuB,QAAQC,SACpDnB,EAAW,KAGO,kBAAlBc,EAAEC,OAAOC,OACTJ,EAAiBE,EAAEC,OAAOE,SAC1BpB,EAAeqB,QAAQC,UAAYtB,EAAeqB,QAAQC,SAC1DjB,EAAc,MAItBkB,qBAAU,WACNC,MAAM,qCACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIf,EAAee,EAAIE,KAAKC,YAC3C,CAACnB,IACH,IAAMoB,EAASpB,EAAYqB,OAAO,EAClC,OAAO,8BACED,EAAW,gCAER,uBAAME,UAAU,YAAhB,UACI,uBACIC,IAAKnC,EACLoC,KAAK,OACLf,KAAK,UACLgB,YAAY,WACZC,MAAOlC,EACXmC,SAAU,SAAApB,GAAC,OAAId,EAAWc,EAAEC,OAAOkB,UACnC,uBACIH,IAAKjC,EACLkC,KAAK,OACLf,KAAK,aACLgB,YAAY,cACZC,MAAOhC,EACXiC,SAAU,SAAApB,GAAC,OAAIZ,EAAcY,EAAEC,OAAOkB,UACtC,wBAAQE,QA9CN,SAACrB,GACfA,EAAEsB,iBACF,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWjC,EAAYqB,QACvDa,QAAQC,IAAIL,GACZjC,EAAgBG,EAAY8B,GAASM,KACrCrC,EAAYC,EAAY8B,GAASrB,OAyCrB,oBAEJ,sBAAKa,UAAU,OAAf,UACI,gCACI,qBAAKtC,IAAKY,EAAWX,IAAKa,IAC1B,oBAAIwB,UAAU,MAAd,SAAqB9B,IACrB,oBAAI8B,UAAU,SAAd,SAAwB5B,OAE5B,gCACI,uBACI8B,KAAK,WACLf,KAAK,aACLC,QAASR,EACTyB,SAAUrB,IACZ,gDACF,uBACIkB,KAAK,WACLf,KAAK,gBACLC,QAASN,EACTuB,SAAUrB,IACZ,yDAGV,gBCtED+B,MATf,WACE,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCDNgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8ae71fea.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Header = (()=>{\r\n    return(\r\n        <header>\r\n            <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" alt=\"TrollFace\"/>\r\n            <p>Meme Generator</p>\r\n        </header>\r\n    )\r\n})\r\n\r\nexport default Header","import React, {useState, useEffect, useRef} from \"react\"\r\n\r\nconst MemeGenerator = ((props)=>{\r\n    const topInputRef = useRef()\r\n    const bottomInputRef = useRef()\r\n    const [topText, settopText] = useState(\"\")\r\n    const [bottomText, setbottomText] = useState(\"\")\r\n    const [randomImg, setrandomImg] = useState(\"http://i.imgflip.com/1bij.jpg\")\r\n    const [altText, setaltText] = useState(\"Soon...\")\r\n    const [allMemeImgs, setallMemeImgs] = useState([])\r\n    const [topChecked, settopChecked] = useState(true)\r\n    const [bottomChecked, setbottomChecked] = useState(true)\r\n   \r\n   const handleClick=((e)=>{\r\n        e.preventDefault()\r\n        const randNum = Math.floor(Math.random() * allMemeImgs.length)\r\n        console.log(randNum)\r\n        setrandomImg(   allMemeImgs[randNum].url )\r\n        setaltText( allMemeImgs[randNum].name )\r\n    })\r\n\r\n    const handleChange=((e)=>{\r\n        if(e.target.name===\"topChecked\"){\r\n            settopChecked(e.target.checked)\r\n            topInputRef.current.disabled = !topInputRef.current.disabled\r\n            settopText(\"\") \r\n        }\r\n\r\n        if (e.target.name === \"bottomChecked\") {\r\n            setbottomChecked(e.target.checked)\r\n            bottomInputRef.current.disabled = !bottomInputRef.current.disabled\r\n            setbottomText(\"\")\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(res => res.json())\r\n            .then(res => setallMemeImgs(res.data.memes))\r\n    },[allMemeImgs])\r\n    const hasMemes=allMemeImgs.length>0\r\n    return(<div>\r\n            {hasMemes ? <div>\r\n                \r\n                <form className=\"meme-form\">\r\n                    <input\r\n                        ref={topInputRef}\r\n                        type=\"text\"\r\n                        name=\"topText\"\r\n                        placeholder=\"Top Text\"\r\n                        value={topText}\r\n                    onChange={e => settopText(e.target.value)} />\r\n                    <input\r\n                        ref={bottomInputRef}\r\n                        type=\"text\"\r\n                        name=\"bottomText\"\r\n                        placeholder=\"Bottom Text\"\r\n                        value={bottomText}\r\n                    onChange={e => setbottomText(e.target.value)} />\r\n                    <button onClick={handleClick}>Gen</button>\r\n                </form>\r\n                <div className=\"meme\">\r\n                    <div>\r\n                        <img src={randomImg} alt={altText} />\r\n                        <h2 className=\"top\">{topText}</h2>\r\n                        <h2 className=\"bottom\">{bottomText}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"topChecked\"\r\n                            checked={topChecked}\r\n                            onChange={handleChange}\r\n                        /><label>Upper Text?</label>   \r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"bottomChecked\"\r\n                            checked={bottomChecked}\r\n                            onChange={handleChange}\r\n                        /><label>Lower Text?</label>\r\n                    </div>\r\n                </div>\r\n        </div> :\"Loading...\"}</div>)\r\n})\r\n\r\nexport default MemeGenerator","import React from \"react\"\nimport Header from \"./Header\"\nimport MemeGenerator  from \"./MemeGenerator\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <MemeGenerator/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}